"use strict";(self.webpackChunkjavascript=self.webpackChunkjavascript||[]).push([[831],{831:(c,e,a)=>{a.r(e),a.d(e,{title:()=>s,story:()=>t});const s="Switch",t="\n<div>\n    <div class=\"section\">\n        <ul>\n            <li>\n                Switch statements are used to perform different actions based on different conditions.\n            </li>\n            <li>\n                You have switch which takes the value as parameter, and then cases which will be executed based on the value.\n            </li>\n            <li>\n                eg: if you pass the value as <code>1</code>, then the <code>case 1</code> will be executed. <br>\n            </li>\n            <li>\n                or if you pass the value as <code>'orange'</code>, then the <code>case 'orange'</code> will be executed. <br>\n            </li>\n        </ul>\n        <code> \n        <hr>\n        <pre>\nswitch (new Date().getDay()) {\ncase 0:\n    day = \"Sunday\";\n    break;\ncase 1:\n    day = \"Monday\";\n    break;\ncase 2:\n    day = \"Tuesday\";\n    break;\ncase 3:\n    day = \"Wednesday\";\n    break;\ncase 4:\n    day = \"Thursday\";\n    break;\ncase 5:\n    day = \"Friday\";\n    break;\ncase 6:\n    day = \"Saturday\";\n}\n        </pre>\n        </code>\n    </div>\n\n    <div class=\"section\">\n        If there is no break statement in the switch statement, then it will execute the next case statement.\n        <br>\n        If there is no match in the switch statement, then it will execute the default statement.\n        <code>\n            <hr>\n        <pre>\nlet expr = 'Mangoes';\nswitch (expr) {\n    case 'Oranges':\n        console.log('Oranges are $0.59 a pound.');\n        break;\n    case 'Apples':\n        console.log('Apples are $0.32 a pound.');\n        break;\n    case 'Mangoes': <span class=\"text-success\"> // \u{1f448}\u{1f3fb} Here</span>\n    case 'Papayas':\n        console.log('Mangoes and papayas are $2.79 a pound.');\n        break;\n    default:\n        console.log('Sorry, we are out of ' + expr + '.');\n}\n        </pre>\n        </code>\n    </div>\n</div>\n"}}]);