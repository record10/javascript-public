"use strict";(self.webpackChunkjavascript=self.webpackChunkjavascript||[]).push([[314],{314:(s,e,a)=>{a.r(e),a.d(e,{title:()=>c,story:()=>o});const c="Variables",o='\n<div>\n    <div class="section">\n       Every language has variables. We will go over the basics of variables in JavaScript.\n    </div>\n\n    <div class="section">\n        <b>Declaration</b> - Javascript variables can be declared in following ways:\n        <br>\n        <code>var a;</code> - declares a <b>global</b> variable called <code>a</code>.\n        <br>\n        <code>let a;</code> - declares a <b>scoped</b> variable called <code>a</code>.\n        <br>\n        <code>const a;</code> - declares a <b>constant</b> variable called <code>a</code>.\n        <br>\n        <br>\n        What is \n        <code>\n            global(var), scoped(let), constant(const)\n        </code>\n        variables? We will explore these in separate section.\n     </div>\n\n     <div class="section">\n        <b>Assignment</b> - Variables can be assigned with values in following ways:\n        <hr>\n        <code>var a = 10;</code> - Assigns the value 10 to variable <code>a</code>.\n        <br>\n        <code>a = 20;</code> - Reassigns the value 20 to variable <code>a</code>.\n        <hr>\n        <code>let b;</code> - declares b <b>scoped</b> variable called <code>b</code>.\n        <br>\n        <code>b = 20;</code> - Reassigns the value 20 to variable <code>b</code>.\n        <hr>\n        <code>const c;</code> - declares c <b>constant</b> variable called <code>c</code>.\n        <br>\n        <code class="text-danger"> <i class="fa fa-times"></i> c = 20;</code> - As c is constant we cannot re assign the value to <code>c</code>.\n        <br>\n\n     </div>\n\n     <div class="section">\n        <b>Data Types</b> - Variables can be assigned with different kind of values in javascript.\n        <br>\n        <code>let a = 10;</code> - Assigns the value 10 to variable <code>a</code>.\n        <hr>\n        <code>let b = "Hello";</code> - Assigns the value "Hello" to variable <code>b</code>.\n        <hr>\n        <code>let c = true;</code> - Assigns the value true (boolean) to variable <code>c</code>.\n        <hr>\n        Javascript variable type is <b>dynamic</b> and any variable can be assigned/changed with different data type.\n\n        <br>\n        i.e. <code>\n            let a = 10; <br>\n            a = "Hello"; <br>\n            a = true; <br>\n        </code>\n        Is Perfectly fine in Javascript, although it is not recommended.\n        <hr>\n        We can check the type of variable using <code>typeof</code> keyword.\n        eg. <br> <code>\n            typeof a; // returns number <br>\n            typeof b; // returns string <br>\n            typeof c; // returns boolean <br>\n        </code>\n        <br>\n        To print it on console you can use following syntax <br> <code>console.log(typeof a)</code>\n     </div>\n\n     <div class="section">\n         We can declare variables in one line as well like:\n         <br>\n         <code>\n            let x, y, z; \n         </code>\n     </div>\n</div>\n\n'}}]);