"use strict";(self.webpackChunkjavascript=self.webpackChunkjavascript||[]).push([[336],{336:(n,s,e)=>{e.r(s),e.d(s,{title:()=>a,story:()=>t});const a="Array",t="\n<div>\n    <div class=\"section\">\n        In Javascript we can store the values in array i.e. sequence of objects(string, boolean, number...), index starts from 0.\n        <br>\n        <b>Declaration</b>\n        <hr>\n        <code>\n            let fruits = ['Apple', 'Banana']\n        </code>\n    </div>\n\n    <div class=\"section\">\n        <b>Methods and operations</b> (Following is favorite dish of an <b>Javascript Interviewer</b> in the basic segment)\n        <hr>\n        <code>\n            console.log( fruits[0] ); <span class=\"text-success\">// Apple</span>\n            <hr>\n            console.log( fruits[1] ); <span class=\"text-success\">// Banana</span>\n            <hr>\n            console.log( fruits[2] ); <span class=\"text-danger\">// undefined</span>\n            <hr>\n            console.log( indexOf('Apple') ); <span class=\"text-success\">// 0 // This gets position number of the element passed in</span>\n            <hr>\n            console.log( fruits.length ); <span class=\"text-success\">// 2</span>\n            <hr>\n            fruits.push('Orange'); <span class=\"text-success\">// Add to end</span>\n            <br>\n            console.log( fruits ); <span class=\"text-success\">// ['Apple', 'Banana', 'Orange']</span>\n            <hr>\n            fruits.pop(); <span class=\"text-success\">// Remove from end</span>\n            <br>\n            console.log( fruits ); <span class=\"text-success\">// ['Apple', 'Banana']</span>\n            <hr>\n            fruits.unshift('Mango'); <span class=\"text-success\">// Add to the front</span>\n            <br>\n            console.log( fruits ); <span class=\"text-success\">// ['Mango', 'Apple', 'Banana']</span>\n            <hr>\n            fruits.shift(); <span class=\"text-success\">// This shift all elements of array resulting in deletion of first element of the array</span>\n            <br>\n            console.log( fruits ); <span class=\"text-success\">// ['Apple', 'Banana']</span>\n            <hr>\n            fruits.splice(1, 0, 'Kiwi');  <span class=\"text-success\">// This will add 'Kiwi' in index 1 of the array</span>\n            <br>\n            console.log( fruits ); <span class=\"text-success\">// ['Apple', 'Kiwi', 'Banana']</span>\n            <hr>\n            fruits.splice(1, 1); <span class=\"text-success\">// This will remove the element at index 1 to 1 step ahead from the array</span>\n            <br>\n            console.log( fruits ); <span class=\"text-success\">// ['Apple', 'Banana']</span>\n            <hr>\n            fruits.splice(1, 1, 'Kiwi'); <span class=\"text-success\">// This will replace the element at index 1 to 1 step ahead from the array</span>\n            <br>\n            console.log( fruits ); <span class=\"text-success\">// ['Apple', 'Kiwi']</span>\n            <hr>\n            fruits.splice(1, 0, 'Kiwi', 'Lemon'); <span class=\"text-success\">// This will add 'Kiwi' and 'Lemon' in index 1 of the array</span>\n            <br>\n            console.log( fruits ); <span class=\"text-success\">// ['Apple', 'Kiwi', 'Lemon']</span>\n            <hr>\n            fruits.splice(1, 2); <span class=\"text-success\">// This will remove the element at index 1 to 2 steps ahead from the array</span>\n            <br>\n            console.log( fruits ); <span class=\"text-success\">// ['Apple']</span>\n            \n        </code>\n    </div>\n\n    </div>\n    "}}]);